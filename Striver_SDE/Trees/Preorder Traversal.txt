/*
    Following is Binary Tree Node structure:
    class TreeNode
    {
    public:
        int data;
        TreeNode *left, *right;
        TreeNode() : data(0), left(NULL), right(NULL) {}
        TreeNode(int x) : data(x), left(NULL), right(NULL) {}
        TreeNode(int x, TreeNode *left, TreeNode *right) : data(x), left(left), right(right) {}
    };
*/
void solve(TreeNode *root,vector<int> &array)
{
    if(root == NULL)
        return;
    
    array.push_back(root->data);
    solve(root->left,array);
    solve(root->right,array);
}

vector<int> getPreOrderTraversal(TreeNode *root)
{
    vector<int> array;
//   if (root == NULL)
//     return preOrder;

//   stack < TreeNode * > s;
//   s.push(root);

//   while (!s.empty()) {
//     TreeNode * topNode = s.top();
//     preOrder.push_back(topNode -> data);
//     s.pop();
//     if (topNode -> right != NULL)
//       s.push(topNode -> right);
//     if (topNode -> left != NULL)
//       s.push(topNode -> left);
//   }
//   return preOrder;
    
    solve(root,array);
    return array;
    
}